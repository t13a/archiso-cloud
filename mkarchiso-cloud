#!/bin/sh

set -e

function help() {
    cat << EOF >&2
Usage:
    ${0} [OPTION]...

Options:
    -h  show help
    -c  clean files
    -p  prepare files
    -m  modify files
    -b  build image
EOF
}

function clean() {
    FILES=(
        "${CONFIG_ORIG_SHA256SUM}"
        "${CONFIG}"
        "${CONFIG_SHA256SUM}"
        "${WORK}"
        "${OUT}"
    )
    
    for FILE in "${FILES[@]}"
    do
        if [ -e "${FILE}" ]
        then
            rm -r "${FILE}"
        else
            continue
        fi
    done
}

function prepare() {
    find "${CONFIG_ORIG}" -type f -exec sha256sum {} \; > "${CONFIG_ORIG_SHA256SUM}"
    cp -r "${CONFIG_ORIG}" "${CONFIG}"
}

function modify() {

    function enable_cloud_init() {
        echo 'cloud-init' >> packages.both
        mkdir -p airootfs/etc/cloud
        cat "${BASE_DIR}/cloud.cfg" > airootfs/etc/cloud/cloud.cfg
        cat << EOF >> airootfs/root/customize_airootfs.sh
sed -i \
-e 's/^#\( - \[ \*log_base, \*log_syslog \]\)/\1/g' \
-e 's/^\(output: .*\)/# \1/g' \
/etc/cloud/cloud.cfg.d/05_logging.cfg
systemctl enable \
cloud-init-local.service \
cloud-init.service \
cloud-config.service \
cloud-final.service
EOF
    }

    function enable_serial_console_grub() {
cat << EOF >> airootfs/root/customize_airootfs.sh
sed -i \
-e 's/^\(GRUB_CMDLINE_LINUX_DEFAULT\)="\([^"]*\)"/GRUB_TERMINAL=serial\nGRUB_SERIAL_COMMAND="serial --speed=38400 --unit=0 --word=8 --parity=no --stop=1"\n\1="\2 console=tty0 console=ttyS0,38400n8"/g' \
/etc/default/grub
grub-mkconfig -o /boot/grub/grub.cfg
EOF
    }

    function enable_serial_console_syslinux() {
        sed -i \
        -e 's/\(APPEND\) \(.*\)/\1 \2 console=tty0 console=ttyS0,115200n8/g' \
        syslinux/archiso_sys.cfg
        sed -i \
        -e '1s/^/SERIAL 0 115200\n/' \
        -e 's/\(APPEND\) \(.*\)/\1 \2 console=tty0 console=ttyS0,115200n8/g' \
        syslinux/syslinux.cfg
    }

    function enable_serial_console_efiboot() {
        sed -i \
        -e 's/options \(.*\)/options \1 console=ttyS0,38400/g' \
        efiboot/loader/entries/archiso-x86_64-cd.conf
        sed -i \
        -e 's/options \(.*\)/options \1 console=ttyS0,38400/g' \
        efiboot/loader/entries/archiso-x86_64-usb.conf
    }

    function enable_timeout_syslinux() {
        sed -i \
        -e '1s/^/TIMEOUT 40\n/g' \
        syslinux/archiso_head.cfg
    }
    
    function disable_udev_dhcpcd() {
        rm airootfs/etc/udev/rules.d/81-dhcpcd.rules
    }
    
    function disable_udev_predictable_network_interface_names() {
        ln -s /dev/null airootfs/etc/udev/rules.d/80-net-setup-link.rules
    }

    BASE_DIR="$(realpath "$(dirname "${BASH_SOURCE[0]}")")"

    (
        cd "${CONFIG}"
        enable_cloud_init
        enable_serial_console_grub
        enable_serial_console_syslinux
        enable_serial_console_efiboot
        enable_timeout_syslinux
        disable_udev_dhcpcd
        disable_udev_predictable_network_interface_names
    )
    find "${CONFIG}" -type f -exec sha256sum {} \; > "${CONFIG_SHA256SUM}"
}

function build() {
    "${CONFIG}/build.sh" -N archlinux-cloud -v
}

unset BUILD
unset CLEAN
unset MODIFY
unset PREPARE

while getopts 'bchmp' OPT
do
    case "${OPT}" in
        b)
            BUILD=yes
            ;;
        c)
            CLEAN=yes
            ;;
        h)
            help
            exit 1
            ;;
        m)
            MODIFY=yes
            ;;
        p)
            PREPARE=yes
            ;;
        *)
            exit 1
            ;;
    esac
done

shift $((OPTIND - 1))

CONFIG_ORIG=/usr/share/archiso/configs/releng
CONFIG_ORIG_SHA256SUM=releng.sha256sum
CONFIG=archlive
CONFIG_SHA256SUM=archlive.sha256sum
OUT=out
WORK=work

if [ -z "${CLEAN}${PREPARE}${MODIFY}${BUILD}" ]
then
    help
    exit 1
fi

[ -n "${CLEAN}" ] && clean
[ -n "${PREPARE}" ] && prepare
[ -n "${MODIFY}" ] && modify
[ -n "${BUILD}" ] && build
exit 0
